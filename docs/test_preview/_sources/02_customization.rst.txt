#############################
Customizing User Environments
#############################

   It is possible to customize the notebook environment using either a conda/mamba environment, or preamble scripts that execute
   before your notebook starts.  
.. contents:: Table of Contents

.. include::
   02_user_script_customization.rst

.. include::
   02_nb_conda_kernels.rst

**********************************************
Pip
**********************************************

It is possible to customize your environment using ``pip install --user``, but there are some caveats.

.. warning::
  In order to allow user installation of pip packages, the system creates
  ``~/.bash_profile`` and ``~/.ipython/profile_default/startup/00-python-user-site.py`` files at first login.
  If these files are removed or the automatically-generated content is modified, pip may no longer function properly.  To have the
  system regenerate the appropriate content, remove the ``~/.python_no_user_site_unset`` file and launch a new server.

You may wish to set ``PYTHONUSERBASE`` to something other than ``$HOME`` to avoid conflicting packages from
being installed when working in different environments. For example::

     [burt@jupyter ~]$ cd ~/work1
     [burt@jupyter work1]$ PYTHONUSERBASE=$PWD/.local pip -q install --user numpy==1.24.1

     [burt@jupyter work1]$ cd ~/work2
     [burt@jupyter work2]$ PYTHONUSERBASE=$PWD/.local pip -q install --user numpy==1.21

To work in the work2 environment with NumPy 1.21, one can add the following notebook cell::

     pythonuserbase = "/home/burt/work2/.local"

     import sys
     pyver = f"python{sys.version_info.major}.{sys.version_info.minor}"
     sys.path.insert(0, f"{pythonuserbase}/lib/{pyver}/site-packages")



